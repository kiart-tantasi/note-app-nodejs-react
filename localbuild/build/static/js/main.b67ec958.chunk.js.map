{"version":3,"sources":["pages/Auth.module.css","components/Note.module.css","components/AddNote.module.css","modals/EditModal.module.css","layout/Nav.module.css","modals/Popup.module.css","modals/AlertModal.module.css","layout/Footer.module.css","components/Notes.module.css","layout/Nav.tsx","layout/Footer.tsx","layout/Layout.tsx","modals/AlertModal.tsx","hooks/useRedux.tsx","redux-store/authSlice.tsx","redux-store/loadingSlice.tsx","redux-store/notificationSlice.tsx","redux-store/postSlice.tsx","utilities/generateId.tsx","utilities/getLocalStoragePosts.tsx","redux-store/dataRefresher.tsx","hooks/useRequest.tsx","components/AddNote.tsx","components/Delete.tsx","components/Note.tsx","components/Notes.tsx","modals/EditModal.tsx","components/EditRoute.tsx","modals/Popup.tsx","pages/Main.tsx","pages/Auth.tsx","App.tsx","redux-store/index.tsx","index.tsx"],"names":["module","exports","Header","_jsxs","className","styles","children","_jsx","NavLink","_ref","isActive","route","to","_ref2","Footer","footer","Layout","props","_Fragment","Nav","ModalOverlay","onClick","onClose","concat","modalBackdrop","modalBox","modalContent","message","AlertModal","ReactDOM","createPortal","document","getElementById","useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","isLoggedIn","userName","reducers","logIn","state","logOut","setUserName","action","payload","authActions","actions","authReducer","reducer","loadingSlice","main","turnOnIsLoading","turnOffIsLoading","loadingActions","loadingReducer","notificationSlice","offlineNotificationIsClosed","trialNotificationIsClosed","closeOfflineNotification","openOfflineNotification","closeTrialNotification","notificationActions","notificationReducer","fetchPosts","createAsyncThunk","async","response","fetch","ok","Error","json","error","err","console","log","postSlice","posts","setPosts","addPost","_id","id","item","des","date","pending","deletePost","filter","x","editPost","map","turnPendingOn","extraReducers","builder","addCase","fulfilled","postActions","postReducer","generateId","char","capChar","toUpperCase","toRandom","answer","i","Math","floor","random","length","DEFAULT_POSTS","Date","getTime","getLocalStoragePosts","localStoragePosts","localStorage","getItem","updated","JSON","parse","reversedPosts","reverse","setItem","stringify","reversedArray","refreshData","initialPosts","dispatch","credentials","userData","transformedPosts","useRequest","refreshDataHandler","isLoading","setIsLoading","useState","data","setData","success","setSuccess","getPostsAndUserName","useCallback","requestData","options","method","headers","body","then","status","toString","res","AddNote","post","auth","titleRef","useRef","desRef","expanded","setExpanded","alertMessage","setAlertMessage","alertOn","setAlertOn","addPostRequest","setPending","closeModal","window","onkeydown","e","key","preventDefault","Alert","onSubmit","current","value","trim","addRequestResponse","newItemId","getDate","newPosts","focus","cursorNone","cursorPointer","onKeyDown","type","placeholder","autoComplete","ref","AddIcon","CircularProgress","color","Delete","deletePostRequest","DeleteIcon","size","classProp","Note","getMonth","getFullYear","noTitle","withTitle","Link","EditIcon","React","memo","Notes","notes","postId","useParams","thePost","find","editPostRequest","navigate","useNavigate","borderStyle","setBorderStyle","desBorderStyle","setDesBorderStyle","handleSubmit","setTitleRed","setTimeout","setDesRed","replace","handleCancel","useEffect","modalInput","style","modalTextarea","modalButtons","EditModal","EditRoute","Routes","Route","path","element","Popup","mainText","extraText","onConfirm","button","fn","text","Main","notification","onConfirmProps","handleNavigateToAuthPage","Fragment","Edit","Auth","usernameRef","passwordRef","registering","setRegistering","pendingLogin","setPendingLogin","pendingLogout","setPendingLogout","publicDomain","process","REACT_APP_API_DOMAIN","mainAuth","logoutButton","onRefreshData","catch","toggleAuth","username","password","htmlFor","labelUsernamePassword","submitAuth","undefined","googleAuth","googleA","href","App","loading","Navigate","store","configureStore","render","StrictMode","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.b67ec958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainAuth\":\"Auth_mainAuth__3XOQ6\",\"two-buttons\":\"Auth_two-buttons__2BmrB\",\"googleAuth\":\"Auth_googleAuth__2xBXP\",\"googleA\":\"Auth_googleA__1hTWm\",\"toggleAuth\":\"Auth_toggleAuth__1BFHO\",\"submitAuth\":\"Auth_submitAuth__OFmhQ\",\"logoutButton\":\"Auth_logoutButton__2Dqc5\",\"spinner-ui\":\"Auth_spinner-ui__2Bs79\",\"labelUsernamePassword\":\"Auth_labelUsernamePassword__240Qc\",\"userName\":\"Auth_userName__hzp6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noTitle\":\"Note_noTitle__3WKXM\",\"withTitle\":\"Note_withTitle__2vZDs\",\"Item-block\":\"Note_Item-block__3Gm9v\",\"description-text\":\"Note_description-text__3YFtG\",\"item-block-footer\":\"Note_item-block-footer__2L_gu\",\"date-text\":\"Note_date-text__1aQ5R\",\"footer-buttons\":\"Note_footer-buttons__3tg6v\",\"edit-link\":\"Note_edit-link__2GpOm\",\"spinner-ui\":\"Note_spinner-ui__Q2Qg_\",\"item-block-flex-container\":\"Note_item-block-flex-container__3NlNa\",\"item-block-flex-footer\":\"Note_item-block-flex-footer__3CkyG\",\"item-block-flex-body\":\"Note_item-block-flex-body__3BuOA\",\"footer-date\":\"Note_footer-date__1unr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursorNone\":\"AddNote_cursorNone__3TR92\",\"cursorPointer\":\"AddNote_cursorPointer__2zYgm\",\"Add-item\":\"AddNote_Add-item__1S6Oz\",\"title-input\":\"AddNote_title-input__3eFhK\",\"Two-input\":\"AddNote_Two-input__fj3Yg\",\"spinner-ui\":\"AddNote_spinner-ui__3YYOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"EditModal_modalBackdrop__1Dgxc\",\"modalBox\":\"EditModal_modalBox__1PZMT\",\"modalInput\":\"EditModal_modalInput__2RVnx\",\"modalTextarea\":\"EditModal_modalTextarea__P-0KK\",\"modalButtons\":\"EditModal_modalButtons__3QHt0\",\"submit-button\":\"EditModal_submit-button__B2-OH\",\"spinnng-div\":\"EditModal_spinnng-div__2SqIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"Nav_main-nav__2d0Yg\",\"route\":\"Nav_route__1Riu8\",\"route-active\":\"Nav_route-active__Tn8tU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop-up\":\"Popup_pop-up__1jSBi\",\"button-container\":\"Popup_button-container__3rDom\",\"button\":\"Popup_button__2q9Hl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"AlertModal_modalBackdrop___7aPQ\",\"modalBox\":\"AlertModal_modalBox__3Rto6\",\"modalContent\":\"AlertModal_modalContent__oha8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3nw2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"Notes_notes__33jZr\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Nav.module.css\";\n\nexport default function Header() {\n  return (\n    <div className={styles[\"main-nav\"]}>\n\n      {/* /POSTS */}\n      <NavLink\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\n        to=\"/posts\"\n      >\n        โพสต์อิท\n      </NavLink>\n\n      {/* /ACCOUNT */}\n      <NavLink\n        className={({ isActive }) => (isActive ? styles[\"route-active\"] : styles.route)}\n        to=\"/account\"\n      >\n        บัญชี\n      </NavLink>\n\n    </div>\n  );\n}","import React from 'react';\nimport styles from \"./Footer.module.css\"; \n\nexport default function Footer() {\n    return (\n        <footer className={styles.footer}>\n            <p>Copyright 2022 © created and designed by Kiart Tantasi</p>\n        </footer>\n    )\n}\n","import React from \"react\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\n\nexport default function Layout(props: {children: React.ReactNode}) {\n  return (\n    <>\n      <Nav />\n      {props.children}\n      <Footer />\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport styles from \"./AlertModal.module.css\";\n\nconst ModalOverlay =(props:{message:string; onClose: () => void;}) => {\n\n    return (\n        <div>\n\n            {/* BACKDROP */}\n            <div onClick={props.onClose} className={` ${styles.modalBackdrop} close-modal`} />\n\n            {/* MODAL */}\n            <div className={`${styles.modalBox} ${styles.modalContent}`}>\n\n                {/* MESSAGE */}\n                <h1>{props.message}</h1>\n\n                {/* CLOSE BUTTON */}\n                <button onClick={props.onClose}>ปิด</button>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default function AlertModal(props: {message:string; onClose: () => void}) {\n\n    // use ReactDOM.createPortal() to create this modal in the div id \"modals\" in index.html\n    \n    return ReactDOM.createPortal(\n\n        <ModalOverlay message={props.message} onClose={props.onClose} />,\n\n        document.getElementById(\"modals\") as HTMLElement\n\n    );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from '../redux-store/index';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n//SOURCE: https://redux.js.org/usage/usage-with-typescript","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState: {isLoggedIn: boolean; userName: string} = {\n    isLoggedIn: false,\n    userName: \"\"\n}\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: initialState,\n    reducers: {\n        logIn(state) {\n            state.isLoggedIn = true;\n        },\n        logOut(state) {\n            state.isLoggedIn = false;\n        },\n        setUserName(state, action: PayloadAction<string>) {\n            state.userName = action.payload;            \n        }\n    }\n})\n\nexport const authActions = authSlice.actions;\nconst authReducer = authSlice.reducer;\nexport default authReducer;","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    main: false\n}\n\nconst loadingSlice = createSlice({\n    name: \"loading\",\n    initialState: initialState,\n    reducers: {\n        turnOnIsLoading(state) {\n            state.main = true;\n        },\n        turnOffIsLoading(state) {\n            state.main = false;\n        }\n    }\n});\n\nexport const loadingActions = loadingSlice.actions;\nconst loadingReducer = loadingSlice.reducer;\nexport default loadingReducer;","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    offlineNotificationIsClosed: false,\n    trialNotificationIsClosed: false,\n}\n\nconst notificationSlice = createSlice({\n    name: \"notification\",\n    initialState: initialState,\n    reducers: {\n        closeOfflineNotification(state) {\n            state.offlineNotificationIsClosed = true;\n        },\n        openOfflineNotification(state) {\n            state.offlineNotificationIsClosed = false;\n        },\n        closeTrialNotification(state) {\n            state.trialNotificationIsClosed = true;\n        }\n    }\n});\n\nexport const notificationActions = notificationSlice.actions;\nconst notificationReducer = notificationSlice.reducer;\nexport default notificationReducer;","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { PostModel } from \"../interfaces/interfaces\";\n\nconst initialState:{posts:PostModel[];} = {\n    posts: []\n}\n\n// createAsyncThunk\nconst fetchPosts = createAsyncThunk(\n    \"posts/fetchPosts\",\n    async() => {\n        try {\n            const response: Response = await fetch(\"/api/posts\");\n            if (!response.ok) {\n                throw new Error(\"cannot fetch posts\");\n            }\n            const posts = await response.json();\n            return posts;\n        } catch (error) {\n            const err = error as Error;\n            console.log(err.message);\n        }\n    }\n)\n\nconst postSlice = createSlice({\n    name: \"post\",\n    initialState: initialState,\n    reducers: {\n\n        // SET POSTS\n        setPosts(state, action: PayloadAction<PostModel[]>) {\n            state.posts = action.payload;\n        },\n\n        // ADD A POST\n        addPost(state, action:PayloadAction<{id:string;item:string;des:string;date:number}>) {\n            state.posts = [...state.posts,\n                {\n                    _id: action.payload.id,\n                    item: action.payload.item,\n                    des: action.payload.des,\n                    date: action.payload.date,\n                    pending: false\n                }\n            ];\n        },\n\n        // DELETE A POST\n        deletePost(state, action:PayloadAction<string>) {\n            state.posts = state.posts.filter(x => x._id !== action.payload);\n        },\n\n        // EDIT A POST\n        editPost(state, action:PayloadAction<{id:string;item:string;des:string}>) {\n            state.posts = state.posts.map(x => {\n                if (x._id === action.payload.id) {\n                    return {...x, item: action.payload.item, des: action.payload.des, pending: false};\n                }\n                return x;\n            });\n        },\n\n        // TURN A POST'S PENDING ON\n        turnPendingOn(state, action: PayloadAction<string>) {\n            state.posts = state.posts.map(x => {\n                if (x._id === action.payload) {\n                    return {...x, pending: true};\n                }\n                return x;\n            });\n        }\n    },\n\n    // EXTRA REDUCERS (REDUX) ????\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                console.log(action.payload);\n            })\n    }\n})\n\nexport {fetchPosts}; // ???\n\nexport const postActions = postSlice.actions;\nconst postReducer = postSlice.reducer;\nexport default postReducer;\n","export default function generateId() {\n    const char = \"abcdefghijklmnopqrstuvwxyz\";\n    const capChar = char.toUpperCase();\n    const num = \"1234567890\";\n    const toRandom = char + capChar + num;\n  \n    let answer =\"\";\n    for (let i=0;i < 30; i++) {\n      answer = answer + toRandom[Math.floor(Math.random() * toRandom.length)];\n    }\n    return answer;\n}","import generateId from \"./generateId\";\nimport { PostModel } from \"../interfaces/interfaces\";\n\nconst DEFAULT_POSTS = [\n    {_id: generateId(), item: \"โพสต์แรกของฉัน\", des:\"ดูแลสุขภาพด้วยงับ\", date: new Date().getTime(), pending: false},\n    {_id: generateId(), item: \"ประชุมเช้า\", des:\"วันพุธ เข้าzoomก่อน 10 โมง\", date: new Date().getTime(), pending: false},\n    {_id: generateId(), item: \"จันทร์หน้า\", des:\"ทำ OT ...\", date: new Date().getTime(), pending: false},\n    {_id: generateId(), item: \"หยุดปีใหม่\", des:\"วันศุกร์หน้าแล้ว!\", date: new Date().getTime(), pending: false}\n];\n\nexport default function getLocalStoragePosts():PostModel[] {\n\n    const localStoragePosts = localStorage.getItem(\"myPostIt\");\n    const updated = localStorage.getItem(\"myPostItUpdate\");\n\n    //updated - just retrieve all local posts\n    if (localStoragePosts && updated) {\n        const parsedPosts = JSON.parse(localStoragePosts);\n        return parsedPosts; \n    }\n\n    // never updated - reverse posts first then use it\n    else if (localStoragePosts && !updated) {\n        const parsedPosts = JSON.parse(localStoragePosts);\n        const reversedPosts = [...parsedPosts].reverse();\n        localStorage.setItem(\"myPostIt\", JSON.stringify(reversedPosts));\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\n        return reversedPosts;\n    }\n\n    //default (never use)\n    else if (!localStoragePosts) {\n        localStorage.setItem(\"myPostIt\", JSON.stringify(DEFAULT_POSTS));\n        localStorage.setItem(\"myPostItUpdate\", JSON.stringify({reversedArray: true}));\n        return DEFAULT_POSTS;\n    }\n\n    else {\n        throw new Error(\"getting posts error.\"); // should not occur.\n    }\n}\n\n// NEED MORE UTILITY FUNCTIONS TO ADD / EDIT / DELETE POSTS","import { AppDispatch } from \".\";\nimport { authActions } from \"./authSlice\";\nimport { loadingActions } from \"./loadingSlice\";\nimport { notificationActions } from \"./notificationSlice\";\nimport { postActions } from \"./postSlice\";\nimport { PostModel } from \"../interfaces/interfaces\";\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\n\n// *** THIS FUNCTION CAN ALSO BE CREATED IN THE FORM OF \"THUNK\" *** // \n\n// ------- WHEN APP STARTS OR USE useRequest() ------ //\nexport const refreshData = async(dispatch: AppDispatch) => {\n\n  // TURN LOADING ON\n  dispatch(loadingActions.turnOnIsLoading());\n\n  // PREPARE 3 THINGS TO RETURN\n  let initialPosts: PostModel[];\n  let userName: string;\n  let isLoggedIn: boolean;\n\n  try {\n\n    const response = await fetch(\"/api/user\", {credentials:\"include\"});\n    if (!response.ok) throw new Error(\"offline mode activated\");\n    // --------- ONLINE --------- //\n    const userData = await response.json();\n    initialPosts = userData.posts;\n    userName = userData.userName;\n    isLoggedIn = true;\n\n  } catch (error) {\n\n    // --------- OFFLINE --------- //\n    const localStoragePosts = getLocalStoragePosts();\n    initialPosts = localStoragePosts;\n    userName = \"\";\n    isLoggedIn = false;\n    const err = (error as Error);\n    console.log(err.message || \"getting posts failed.\");\n\n  }\n\n  // ------ ADD \"pending\" PROPERTY TO EVERY POST ------ //\n  const transformedPosts = initialPosts.map(x => {\n    return{...x, pending: false}\n  });\n\n  // DISPATCH: set posts / isLoggedIn / offlineNotification / username / turn loading off\n  dispatch(postActions.setPosts(transformedPosts));\n  dispatch(isLoggedIn ? authActions.logIn(): authActions.logOut());\n  dispatch(isLoggedIn ? notificationActions.closeOfflineNotification() : notificationActions.openOfflineNotification()); // open noti if offline\n  dispatch(authActions.setUserName(userName));\n  dispatch(loadingActions.turnOffIsLoading());\n};","import { useCallback, useState } from \"react\";\nimport { useAppDispatch } from \"./useRedux\";\nimport { refreshData } from \"../redux-store/dataRefresher\";\nimport getLocalStoragePosts from \"../utilities/getLocalStoragePosts\";\n\nimport { AddPostReturn, FetchOptionsModel, PostModel } from \"../interfaces/interfaces\";\nimport { FetchDataReturn } from \"../interfaces/interfaces\";\n\nexport default function useRequest() {\n\n    // REDUX\n    const dispatch = useAppDispatch();\n    const refreshDataHandler = () => {\n        refreshData(dispatch);\n    }\n\n    // THINGS TO RETURN FROM THIS HOOK\n    const [isLoading , setIsLoading] = useState(false);\n    const [data, setData] = useState<FetchDataReturn | AddPostReturn>();\n    const [success, setSuccess] = useState(false);\n    \n    // GET POSTS AND USERNAME\n    const getPostsAndUserName = useCallback( async() => {\n        // TURN LOADING ON\n        setIsLoading(true);\n        let initialPosts:PostModel[];\n        let userName;\n        let isLoggedIn;\n\n        try {\n          const response = await fetch(\"/api/user\", {credentials:\"include\"});\n          if (!response.ok) throw new Error(\"offline mode activated\");\n          // ------------ ONLINE ----------- //\n          const userData = await response.json();\n          initialPosts = userData.posts;\n          userName = userData.userName;\n          isLoggedIn = true;\n        }\n        \n        catch (error) {\n          // ------------ OFFLINE ----------- //\n          const localStoragePosts = getLocalStoragePosts();\n          initialPosts = localStoragePosts;\n          userName = null;\n          isLoggedIn = false;\n          const err = (error as Error);\n          console.log(err.message || \"getting posts failed.\");\n        }\n\n        // TURN LOADING OFF\n        setIsLoading(false);\n\n        // THERE ARE 2 WAYS TO GET THIS DATA\n\n        // 1. FROM THIS HOOK (data property)\n        setData({\n            posts: initialPosts,\n            isLoggedIn: isLoggedIn,\n            userName: userName\n        });\n\n        // 2. RETURN DIRECTLY\n        return {\n            posts: initialPosts,\n            isLoggedIn: isLoggedIn,\n            userName: userName\n        } \n    }, []);\n    \n    async function addPost(requestData: {item:string;des:string}) {\n        // TURN LOADING ON\n        setIsLoading(true);\n\n        const options: FetchOptionsModel = {\n            method:\"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({ item: requestData.item, des: requestData.des }),\n            credentials: \"include\"\n        }\n\n        // RETURN FETCHED DATA\n        return fetch(\"/api/posts\", options)\n        .then((response) => {\n\n            // OK\n            if (response.ok) {\n              return response.json();\n\n              // MISSING BOTH TITLE AND DESCRIPTION\n            } else if (response.status === 400) {\n              setIsLoading(false);\n              throw new Error(\"No information sent\");\n\n              // NO AUTHENITCATION\n            } else {\n              refreshDataHandler();\n              setIsLoading(false);\n              throw new Error(\"No authentication\");\n            }\n        })\n        .then(data => {\n            // TURN LOADING OFF\n            setIsLoading(false);\n\n            // THERE ARE 2 WAYS TO GET THIS DATA\n\n            // 1. FROM THIS HOOK (data property)\n            setData({\n                id: data.id,\n                date: data.date\n            });\n\n            // 2. RETURN DIRECTLY\n            return {\n                id: data.id,\n                date: data.date\n            }\n        })\n        // NO CATCHING ERROR HERE\n    }\n\n    async function deletePost(requestData:{id:string}) {\n        // TURN LOADING ON AND SET SUCCESS TO FALSE\n        setIsLoading(true);\n        setSuccess(false);\n\n        // RETURN FETCHED DATA\n        return fetch(\"/api/posts/\"+ requestData.id.toString(), {method:\"DELETE\", credentials: \"include\"})\n        .then((res) => {\n\n            // SUCCESS\n            // THERE ARE 2 WAYS TO KNOW IF IT IS SUCCESS\n            // 1. FROM THIS HOOK (success property)\n            // 2. RETURN DIRECTLY \"success\"\n            if (res.ok) {\n                setIsLoading(false);\n                setSuccess(true);\n                return \"success\";\n\n            // NO AUTHENTICATION\n            } else if (res.status === 403) {\n                refreshDataHandler();\n                setIsLoading(false);\n                setSuccess(false);\n                throw new Error(\"No authentication\");\n\n            // OTHER ERRORS\n            } else {\n                refreshDataHandler();\n                setIsLoading(false);\n                setSuccess(false);\n                throw new Error(\"deleting failed.\")\n            }\n        })\n        // NO CATCHING ERROR HERE\n    }\n\n    async function editPost(requestData:{item:string;des:string;id:string}) {\n        // TURN LOADING ON AND SET SUCCESS TO FALSE\n        setIsLoading(true);\n        setSuccess(false);\n        const options: FetchOptionsModel = {\n            method:\"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({item: requestData.item, des:requestData.des}),\n            credentials: \"include\"\n        }\n\n        return fetch(\"/api/posts/\" + requestData.id, options)\n        .then(response => {\n            // SUCCESS\n            // THERE ARE 2 WAYS TO KNOW IF IT IS SUCCESS\n            // 1. FROM THIS HOOK (success property)\n            // 2. RETURN DIRECTLY \"success\"\n            if(response.ok) {\n                setIsLoading(false);\n                setSuccess(true);\n                return \"success\";\n\n            // MISSING BOTH TITLE AND DESCRIPTION\n            } else if (response.status === 400) {\n                setIsLoading(false);\n                setSuccess(false);\n                throw new Error(\"No information sent\")\n\n            // NO AUTHENTICATION\n            } else if (response.status === 403) {\n                setIsLoading(false);\n                setSuccess(false);\n                refreshDataHandler();\n                throw new Error(\"No authentication\")\n\n            // OTHER ERRORS\n            } else {\n                setIsLoading(false);\n                setSuccess(false);\n                refreshDataHandler();\n                throw new Error(\"updating failed.\")\n            }\n        })\n        // NO CATCHING ERROR HERE\n    }\n\n    // ------------------------ RETURN FUNCTIONS FOR useRequest() ------------------------ //\n    return {getPostsAndUserName, addPost, editPost, deletePost, isLoading, data, success};\n}","import React, { useState, useRef } from \"react\";\nimport Alert from \"../modals/AlertModal\";\nimport useRequest from \"../hooks/useRequest\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/useRedux\";\nimport { postActions } from \"../redux-store/postSlice\";\nimport generateId from \"../utilities/generateId\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport styles from \"./AddNote.module.css\"\n\nexport default function AddNote() {\n  const dispatch = useAppDispatch();\n  const posts = useAppSelector(state => state.post.posts);\n  const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\n\n  const titleRef = useRef<HTMLInputElement>(null);\n  const desRef = useRef<HTMLInputElement>(null);\n  const [expanded, setExpanded] = useState(false);\n  const [alertMessage,setAlertMessage] = useState(\"\");\n  const [alertOn, setAlertOn] = useState(false);\n  const { addPost: addPostRequest } = useRequest();\n  const [pending, setPending] = useState(false);\n\n  function handleTitleOn() {\n    if (expanded === false) {\n      setExpanded(true);\n    }\n  }\n\n  function handleTitleKeyPress(e: React.KeyboardEvent) {\n    if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      desRef.current!.focus();\n    }\n  }\n\n  function handleDesKeyDown(e: React.KeyboardEvent) {\n    if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      titleRef.current!.focus();\n    }\n  }\n\n  // ------------------------ SUBMIT A POST ----------------------------- //\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    // ---------------- FORM VALIDATION ----------------- //\n    if (expanded === false) {\n      setAlertMessage(\"โปรดระบุข้อความ\");\n      setAlertOn(true);\n      return;\n    }\n    const item = titleRef.current!.value.trim() || \"\";\n    const des = desRef.current!.value.trim() || \"\";\n    if (!item && !des) {\n      setAlertMessage(\"โปรดระบุข้อความ\");\n      setAlertOn(true);\n      return;\n    }\n    if (item.length > 25) {\n      setAlertMessage(\"หัวข้อยาวเกินไป\");\n      setAlertOn(true);\n      return;\n    }\n    if (item.length !== 0 && des.length > 95) {\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\n      setAlertOn(true);\n      return;\n    } else if (item.length === 0 && des.length > 120) {\n      setAlertMessage(\"รายละเอียดยาวเกินไป\");\n      setAlertOn(true);\n      return;\n    }\n\n    // SUCCESS\n    // ---------------- ONLINE ----------------- //\n    if (isLoggedIn) {\n      setPending(true);\n      (async() => {\n        try {\n          // http request\n          const addRequestResponse = await addPostRequest({item:item,des:des});\n          // redux \n          dispatch(postActions.addPost({id: addRequestResponse.id, item, des, date: addRequestResponse.date}));\n          setPending(false);\n        } catch (error) {\n          const err = error as Error;\n          console.log(err.message);\n          if (err.message === \"No information sent\") {\n            setPending(false);\n          }\n        }\n      }) ();\n      \n    // ---------------- OFFLINE ----------------- //\n    } else {\n      // prepare post data\n      const newItemId = generateId();\n      const getDate = new Date().getTime();\n      const newPosts = [\n        ...posts,{\n          _id: newItemId,\n          item: item,\n          des: des,\n          date: getDate,\n        }\n      ];\n      // local storage\n      localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\n      // redux\n      dispatch(postActions.addPost({id: newItemId, item, des, date: getDate}))\n    }\n    \n    titleRef.current!.value = \"\";\n    desRef.current!.value = \"\";\n    desRef.current!.focus();\n  }\n\n  // -------------------------------------------------------------------- //\n\n  function closeModal() {\n    setAlertOn(false);\n  }\n\n  window.onkeydown = (e) => {\n    if (alertOn) {\n      if (e.key === \"Enter\" || e.key === \"Escape\") {\n        e.preventDefault();\n        closeModal();\n      }\n    }\n  }\n\n  return (\n    <>\n    {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\n\n    <div className={styles[\"Add-item\"]}>\n\n      {/* FORM */}\n      <form onSubmit={handleSubmit}>\n\n        <div className={` ${styles[\"Two-input\"]} ${expanded ? styles.cursorNone : styles.cursorPointer}`}>\n\n          {/* TITLE */}\n          {expanded && <input\n            className={styles[\"title-input\"]}\n            onKeyDown={handleTitleKeyPress}\n            type=\"text\"\n            placeholder=\"หัวข้อ (optional)\"\n            autoComplete=\"off\"\n            ref={titleRef}\n          ></input>}\n          \n          {/* DESCRIPTION */}\n          <input\n            className={styles[\"des-input\"]}\n            onClick={handleTitleOn}\n            onKeyDown={handleDesKeyDown}\n            type=\"text\"\n            placeholder=\"โพสต์อิท !\"\n            autoComplete=\"off\"\n            ref={desRef}\n          ></input>\n          \n        </div>\n\n        {/* SUBMIT BUTTON */}\n        {!pending && <button\n          type=\"submit\"\n        >\n          <AddIcon />\n        </button>}\n\n      </form>\n      \n      {/* SPINNER WHEN ADDING A NEW POST */}\n      {pending && <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />}\n    </div>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport useRequest from \"../hooks/useRequest\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\nimport { postActions } from '../redux-store/postSlice';\n\nexport default function Delete(props:{id:string;classProp:string}) {\n\n    const dispatch = useAppDispatch();\n    const posts = useAppSelector(state => state.post.posts);\n    const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn);\n\n    const [pending, setPending] = useState(false);\n    const { deletePost: deletePostRequest } = useRequest();\n    const id = props.id;\n  \n    function handleDelete() {\n        // -------- ONLINE -------- //\n        if (isLoggedIn) {\n            setPending(true);\n            (async() => {\n                try {\n                    await deletePostRequest({id: id.toString()});\n                    dispatch(postActions.deletePost(id));\n                } catch(error) {\n                    const err = error as Error;\n                    console.log(err.message || \"delete request failed.\");\n                }\n            }) ();\n            \n        // -------- OFFLINE -------- //\n        } else {\n            const newPosts = posts.filter((x) => x._id.toString() !== id.toString());\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\n            dispatch(postActions.deletePost(id));\n        }\n    }\n\n    return (\n        <>\n        <button className=\"delete-button\" onClick={handleDelete}>\n            {!pending && <DeleteIcon />}\n            {pending && <CircularProgress size={20} color=\"inherit\" className={props.classProp} />}\n        </button>\n        </>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Delete from \"../components/Delete\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport styles from \"./Note.module.css\";\n\nconst Note: React.FC<{ date:number; item: string; des: string; id: string; }> = (props) => {\n    const date = new Date(props.date).getDate().toString() + \"/\" + ( new Date(props.date).getMonth() + 1 ).toString() + \"/\" + new Date(props.date).getFullYear().toString() || \"no date described.\";\n  \n    return (\n      <div className={styles[\"Item-block\"]}>\n  \n        <div className={styles[\"item-block-flex-container\"]}>\n\n          {/* MAIN BODY */}\n          <div className={styles[\"item-block-flex-body\"]}>\n            {/* TITLE */}\n            <h3>{props.item}</h3>\n            {/* DESCRIPTION */}\n            <p className={` ${styles[\"description-text\"]} ${(props.item === \"\") ? styles.noTitle : styles.withTitle}`}>{props.des}</p>\n          </div>\n  \n          {/* FOOTER */}\n          <div className={` ${styles[\"item-block-footer\"]} ${styles[\"item-block-flex-footer\"]} `}>\n            {/* DATE */}\n            <div className={styles[\"footer-date\"]}>\n              <p className={styles[\"date-text\"]}>{date}</p>\n            </div>\n\n            {/* BUTTONS */}\n            <div className={styles[\"footer-buttons\"]}>\n              {/* EDIT BUTTON */}\n              <Link className={styles[\"edit-link\"]} to={`/posts/edit/${props.id}`}><button><EditIcon className=\"edit-icon\" /></button></Link>\n              {/* DELETE BUTTON */}\n              <Delete id={props.id} classProp={styles[\"spinner-ui\"]} />\n            </div>\n\n          </div>\n  \n        </div>\n\n      </div>\n    );\n  }\n\n  export default React.memo(Note);","import Note from \"./Note\";\nimport styles from \"./Notes.module.css\";\nimport { useAppSelector } from \"../hooks/useRedux\";\n\nexport default function Notes() {\n  const posts = useAppSelector(state => state.post.posts);\n  const reversedPosts = [...posts].reverse();\n  // REVERSE TO BRING THE LATEST POSTS FIRST\n\n  return (\n    <div className={styles.notes}>      \n      {reversedPosts.map((x) => {\n        return (\n          <Note\n            key={x._id}\n            id={x._id}\n            item={x.item}\n            des={x.des}\n            date={x.date}\n          />\n        );\n      })}\n    </div>\n  );\n}","import React, {useRef, useEffect, useState} from 'react';\nimport ReactDOM from \"react-dom\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useRequest from \"../hooks/useRequest\";\n// CSS AND MUI\nimport styles from \"./EditModal.module.css\";\nimport CircularProgress from '@mui/material/CircularProgress';\n// REDUX\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\nimport { postActions } from '../redux-store/postSlice';\n\nfunction ModalOverlay() {\n\n    // PARAMS\n    const { postId } = useParams();\n\n    // REDUX\n    const dispatch = useAppDispatch();\n    const { posts} = useAppSelector(state => state.post);\n    const thePost = posts.find(x => x._id.toString() === postId);\n    const { isLoggedIn } = useAppSelector(state => state.auth);\n\n    // useRequest()\n    const { editPost: editPostRequest } = useRequest();\n\n    // NAVIFATE\n    const navigate = useNavigate();\n\n    // STATES\n    const titleRef = useRef<HTMLInputElement>(null);\n    const desRef = useRef<HTMLTextAreaElement>(null);\n    const [ borderStyle, setBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\n    const [ desBorderStyle, setDesBorderStyle ] = useState({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\n\n    useEffect(() => {\n\n        // SHOW POST ONLY WHEN READY\n        if (thePost && !thePost.pending) {\n            titleRef.current!.value = thePost.item || \"\";\n            desRef.current!.value = thePost.des || \"\";\n            desRef.current!.focus();\n\n        // WHEN DATA IS NOT READY\n        } else if (!thePost && !thePost!.pending) {\n            console.log(\"loading data for editing...\");\n        }\n\n    }, [thePost])\n\n    // HANDLING ARROWN DOWN AND ENTER BUTTON\n\n    function handleTitleKeyDown(e: React.KeyboardEvent) {\n        if (e.key === \"ArrowDown\") {\n            e.preventDefault();\n            desRef.current!.focus();\n        }\n    }\n\n    function handleDesKeyDown(e: React.KeyboardEvent) {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleSubmit();\n        }\n    }\n\n    // --------------------- SUBMIT TO EDIT A POST --------------------- //\n\n    function handleSubmit(e?: React.FormEvent) {\n        if (e) e.preventDefault();\n        \n        const id: string | undefined = postId;\n        const item = titleRef.current!.value.trim();\n        const des = desRef.current!.value.trim();\n\n        // -- FUNCTIONS TO MAKE TITLE AND DESCRIPTION'S BORDER RED -- //\n        function setTitleRed() {\n            setBorderStyle({\"border\":\"1px solid red\"});\n            setTimeout(() => {\n                setBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\n            }, 3000);\n        }\n        function setDesRed() {\n            setDesBorderStyle({\"border\":\"1px solid red\"});\n            setTimeout(() => {\n                setDesBorderStyle({\"border\":\"1px solid rgba(0,0,0,0.5)\"});\n            }, 3000);\n        }\n\n        // FORM VALIDATION\n\n        // NO CHANGES FOUND\n        if (item === thePost!.item && des === thePost!.des) {\n            console.log(\"no changes found.\");\n            navigate(\"/posts\");\n            return;\n        }\n\n        // EMPTY VALUES\n        if (item.length === 0 && des.length === 0) {\n            setTitleRed();\n            setDesRed();\n            return;\n        }\n\n        // TITLE > 25 && DESCRIPTION > 95\n        if (item.length > 25 && des.length > 95) {\n            setTitleRed();\n            setDesRed();\n            return;\n        }\n\n        // TITLE > 25\n        if (item.length > 25) {\n            setTitleRed();\n            return;\n        }\n\n        // DESCRIPTION > 95 WITH TITLE\n        if (des.length > 95 && item.length !== 0) {\n            setDesRed();\n            return;\n        }\n\n        // DESCRIPTION > 120 WITHOUT TITLE\n        if (des.length > 120 && item.length === 0) {\n            setDesRed();\n            return;\n        }\n\n        // SUCCESS\n\n        // ---------------- ONLINE ---------------- //   \n        if (isLoggedIn) {\n            // TURN ON PENDING (FOR SPINNER)\n            dispatch(postActions.turnPendingOn(id!));\n\n            // SEND REQUEST (with useRequest())\n            (async() => {\n                try {\n\n                    // SEND REQUEST\n                    await editPostRequest({item:item,des:des,id:id!});\n\n                    // DISPATCH\n                    dispatch(postActions.editPost({id:id!, item, des}));\n\n                    // NAVIGATE TO \"/posts\"\n                    navigate(\"/posts\", {replace:true});\n\n                } catch(err) {\n                    console.log(err);\n                    navigate(\"/posts\", {replace:true});\n                }\n            }) ();\n\n        // ---------------- OFFLINE ---------------- // \n        } else {\n            // EDIT POSTS FROM REDUX (useAppSelector)\n            const newPosts = posts.map((x) => (x._id.toString() === id!.toString() ? { ...x, item: item, des: des } : x));\n\n            // SET IN LOCAL STORAGE\n            localStorage.setItem(\"myPostIt\", JSON.stringify(newPosts));\n\n            // DISPATCH\n            dispatch(postActions.editPost({id:id!, item, des}));\n\n            // NAVIGATE TO \"/posts\"\n            navigate(\"/posts\", {replace:true});\n        }\n    }\n    // ----------------------------------------------------------------- //\n\n    function handleCancel() {\n        navigate(\"/posts\",{ replace: true });        \n    }\n\n    window.onkeydown = (e) => {\n        if (e.key === \"Escape\") {\n            e.preventDefault();\n            handleCancel();\n        }\n      }\n\n    return (\n        <div>\n\n            {/* BACKDROP */}\n            <div onClick={handleCancel} className={`backdrop-div ${styles.modalBackdrop}`} />\n\n            {/* MODAL */}\n            <div className={styles.modalBox}>\n\n                <form onSubmit={handleSubmit}>\n\n                    {/* TITLE */}\n                    <input type=\"text\" ref={titleRef} className={styles.modalInput} style={borderStyle} onKeyDown={handleTitleKeyDown} />\n                    <br/><br/>\n\n                    {/* DESCRIPTION */}\n                    <textarea onKeyDown={handleDesKeyDown} ref={desRef} className={styles.modalTextarea} style={desBorderStyle} />\n\n                    {/* SPINNER || BUTTONS */}\n                    {thePost!.pending ?\n\n                        // SPINNER (WHEN PENDING)\n                        <div className={styles[\"spinnng-div\"]}><CircularProgress size={35} color=\"inherit\" /></div>:\n\n                        // BUTTONS\n                        <div className={styles.modalButtons}>\n                            <button type=\"button\" onClick={handleCancel}>ยกเลิก</button>\n                            <button type=\"submit\" className={styles[\"submit-button\"]}>แก้ไข</button>\n                        </div>\n\n                    }\n\n                </form>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default function EditModal () {\n    return ReactDOM.createPortal(\n            <ModalOverlay />,\n            document.getElementById(\"edit-modal\") as HTMLElement\n        );\n}\n// ReactDOM.createPoral to link to div id \"edit-modal\" in index.html","import EditModal from \"../modals/EditModal\";\nimport {Routes, Route} from \"react-router-dom\";\n\nexport default function EditRoute() {\n    return (\n        <Routes>\n            <Route path=\"edit\">\n                <Route path=\":postId\" element={<EditModal />} />\n            </Route>\n        </Routes>\n    )\n}\n// DYNAMIC REACT ROUTER","import styles from \"./Popup.module.css\";\n\ntype PopupProps = {\n  onClick: () => void;\n  mainText: string;\n  extraText?: string;\n  onConfirm?: {\n    text: string;\n    fn: () => void;\n  };\n}\n\nexport default function Popup(props: PopupProps) {\n\n  return (\n    <div className={styles[\"pop-up\"]}>\n\n      {/* MAIN TEXT */}\n      <p>{props.mainText}</p>\n\n      {/* EXTRA TEXT IF USED */}\n      {props.extraText && <p>{props.extraText}</p>}\n\n      {/* BUTTONS */}\n      <div className={styles[\"button-container\"]}>\n\n          {/* CONFIRM BUTTON */}\n          {props.onConfirm && <button className={styles.button} onClick={props.onConfirm.fn}>{props.onConfirm.text}</button>}\n\n          {/* CLOSE BUTTON */}\n          <button className={styles.button} onClick={props.onClick}>ปิด</button>\n\n      </div>\n\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport AddNote from '../components/AddNote';\nimport Notes from \"../components/Notes\";\nimport Edit from \"../components/EditRoute\";\nimport Popup from '../modals/Popup';\n\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\nimport { notificationActions } from '../redux-store/notificationSlice';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Main() {\n    // REDUX\n    const dispatch = useAppDispatch();\n    const offlineNotificationIsClosed = useAppSelector(state => state.notification.offlineNotificationIsClosed);\n\n    // NAVIGATE\n    const navigate = useNavigate();\n    const handleNavigateToAuthPage = () => {\n        navigate(\"/account\");\n    }\n\n    // POPUP PROPS\n    const onConfirmProps = {\n        fn: handleNavigateToAuthPage,\n        text: \"ลองเลย!\"\n    }\n\n    useEffect(() => {\n        console.log(\"RENDERED.\");\n    }, [])\n\n    return (\n        <React.Fragment>\n\n            {/* POPUP WHEN USING OFFLINE MODE */}\n            {!offlineNotificationIsClosed && \n            <Popup \n                onClick={() => dispatch(notificationActions.closeOfflineNotification())}\n                mainText=\"คุณกำลังใช้งานโหมดออฟไลน์\"\n                extraText=\"ใช้งานโหมดออนไลน์เพื่อประสิทธิภาพสูงสุด!\" \n                onConfirm={onConfirmProps}\n            />}\n\n            {/* MAIN CONTENT */}\n            <AddNote />\n            <Notes />\n\n            {/* FOR EDITING MODE */}\n            <Edit />\n\n        </React.Fragment>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport styles from \"./Auth.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from '../modals/AlertModal';\nimport Popup from \"../modals/Popup\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { FetchOptionsModel } from '../interfaces/interfaces';\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\nimport { notificationActions } from '../redux-store/notificationSlice';\n\nexport default function Auth(props:{onRefreshData: () => void}) {\n\n    // NAVIGATE\n    const navigate = useNavigate();\n\n    // STATES\n    const usernameRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n    const [ registering, setRegistering ] = useState(false);\n    const [alertMessage,setAlertMessage] = useState(\"\");\n    const [alertOn, setAlertOn] = useState(false);\n    const [pendingLogin, setPendingLogin] = useState(false);\n    const [pendingLogout, setPendingLogout] = useState(false);\n\n    // REDUX\n    const dispatch = useAppDispatch();\n    const trialNotificationIsClosed = useAppSelector(state => state.notification.trialNotificationIsClosed);\n    const { isLoggedIn, userName } = useAppSelector(state => state.auth);\n    \n    // --------------------------- SUBMIT FORM ----------------------------- //\n    function handleSubmit(e: React.FormEvent) {\n        e.preventDefault();\n\n        // ----- FORM VALIDATION ----- //\n        const username = usernameRef.current!.value;\n        const password = passwordRef.current!.value;\n        if (!username || !password) {\n            setAlertMessage(\"โปรดระบุ username และ password\");\n            setAlertOn(true);\n            return;\n        }\n\n        const options: FetchOptionsModel = {\n            method:\"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({username:username, password:password}),\n            credentials: \"include\"\n        }\n        // ----- REGISTER ----- //\n        if (registering) {\n            setPendingLogin(true);\n            fetch(\"/api/register\", options)\n            .then(res => {\n                if (res.ok) {\n                    console.log(\"registered successfully\");\n                    usernameRef.current!.value = \"\";\n                    passwordRef.current!.value = \"\";\n                    setPendingLogin(false);\n                    setAlertMessage(\"ลงทะเบียนสำเร็จ\");\n                    setAlertOn(true);\n                    setRegistering(false);\n                } else if (res.status === 403) {\n                    setPendingLogin(false);\n                    setAlertMessage(\"username นี้ถูกใช้งานแล้ว\");\n                    setAlertOn(true);\n                } else {\n                    setPendingLogin(false);\n                    setAlertMessage(\"การลงทะเบียนล้มเหลว\");\n                    setAlertOn(true);\n                }\n            })\n        // ----- LOGIN ----- //\n        } else if (!registering) {\n            setPendingLogin(true);\n            fetch(\"/api/login\", options)\n            .then(res => {\n                if (res.ok) {\n                    console.log(\"logged in successfully\");\n                    props.onRefreshData();\n                    navigate(\"/posts\",{ replace: true });\n                } else if (res.status === 401) {\n                    setPendingLogin(false);\n                    setAlertMessage(\"username หรือ password ไม่ถูกต้อง\");\n                    setAlertOn(true);\n                } else {\n                    setPendingLogin(false);\n                    setAlertMessage(\"การเข้าสู่ระบบล้มเหลว\");\n                    setAlertOn(true);\n                }\n            })\n            .catch((err) => {\n                setPendingLogin(false);\n                console.log(err.message);\n            });\n        }\n    }\n    // --------------------------------------------------------------------- //\n\n    // LOGOUT\n    function handleLogOut() {\n        setPendingLogout(true);\n        fetch(\"/api/logout\", {credentials:\"include\", method:\"POST\"})\n        .then(res => {\n          if (res.ok) {\n            console.log(\"logged out successfully\");\n            props.onRefreshData();\n          } else {\n            props.onRefreshData();\n            throw new Error(\"failed logging out.\")\n          }\n        })\n        .catch(err => console.log(err.message));\n    }\n\n    function closeModal() {\n        setAlertOn(false);\n    }\n    \n    // PRESS \"ENTER\" TO GO FROM USERNAME INPUT TO PASSWORD INPUT\n    function handleUsernameKeyDown(e: React.KeyboardEvent) {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            passwordRef.current!.focus();\n        }\n    }\n    \n    // PRESS \"ENTER\" OR \"ESC\" TO CLOSE MODAL\n    window.onkeydown = (e) => {\n        if (alertOn === true) {\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\n                e.preventDefault();\n                closeModal();\n            }\n        }\n    }\n\n    const publicDomain = process.env.REACT_APP_API_DOMAIN;\n\n    // IF NOT LOGGED IN, SHOW LOGIN / REGISTER FORM\n    if (!isLoggedIn) {\n        return (\n            <>\n\n            {/* ALERT MODAL */}\n            {alertOn && <Alert message={alertMessage} onClose={closeModal} />}\n\n            {/* TRIAL NOTIFICATION (WHEN OFFLINE) */}\n            {!trialNotificationIsClosed &&\n            <Popup \n                onClick={() => dispatch(notificationActions.closeTrialNotification())}\n                mainText=\"ทดลองใช้งาน username = admin\"\n                extraText=\"password = my_password_123\"\n            />}\n\n            {/* MAIN CONTENT */}\n            <div className={styles.mainAuth}>\n\n                {/* BUTTON TO CHANGE FORM TYPE (LOGIN || REGISTER) */}\n                <button\n                    className={`${styles.toggleAuth} ${styles[\"two-buttons\"]}`}\n                    onClick={() => setRegistering(!registering)}\n                >\n                ต้องการ{(registering) ? \"เข้าสู่ระบบ\" : \"สมัครใช้งาน\"}\n                </button>\n\n                <br/><br/>\n\n                {/* FORM */}\n                <form onSubmit={handleSubmit}>\n\n                    {/* USERNAME */}\n                    <label htmlFor=\"username\" className={styles.labelUsernamePassword}>username</label>\n                    <br/>\n                    <input type=\"text\" ref={usernameRef} name=\"username\" autoComplete=\"off\" onKeyDown={handleUsernameKeyDown} />\n                    <br/><br/>\n\n                    {/* PASSWORD */}\n                    <label htmlFor=\"password\" className={styles.labelUsernamePassword}>password</label>\n                    <br/>\n                    <input type=\"password\" ref={passwordRef} name=\"password\" autoComplete=\"off\" />\n                    <br/><br/>\n\n                    {/* SUBMIT BUTTON OR SPINNER */}\n                    {!pendingLogin ?\n\n                    // BUTTON (REGISTER || LOGIN)\n                    <button \n                        className={`${styles.submitAuth} ${styles[\"two-buttons\"]}`}\n                        type=\"submit\"\n                    >\n                    {(registering) ? \"ลงทะเบียน\" : \"เข้าสู่ระบบ\"}\n                    </button> :\n\n                    // SPINNER (WHEN PENDING)\n                    <CircularProgress size={25} color=\"inherit\" className={styles[\"spinner-ui\"]} />\n\n                    }\n                    {publicDomain !== undefined && (\n                        <>\n                            <br/><br/>\n                            <button\n                                type=\"button\"\n                                className={styles.googleAuth}>\n                                <a\n                                className={styles.googleA}\n                                href={`${process.env.REACT_APP_API_DOMAIN}/api/auth/google`}>\n                                    เข้าสู่ระบบ/สมัครโดย GOOGLE\n                                </a>\n                            </button>\n                        </>\n                    )}\n\n                </form>\n\n            </div>\n\n            </>\n        )\n    }\n\n    // IF LOGGED IN, SHOW LOG OUT BUTTON\n    return (\n        <div className={styles.mainAuth}>\n\n            {/* USERNAME */}\n            {!pendingLogout && <h1 className={styles.userName}>{userName || \"\"}</h1>}\n            <br/>\n\n            {/* LOGOUT BUTTON || SPINNER */}\n            {!pendingLogout ?\n\n            // LOGOUT BUTTON\n            <button className={styles.logoutButton} type=\"button\" onClick={handleLogOut}>ออกจากระบบ</button> :\n\n            // SPINNER (WHEN PENDING)\n            <CircularProgress color=\"inherit\" className={styles[\"spinner-ui\"]} />\n            \n            }\n\n            <br/><br/>\n\n        </div>\n    )\n}\n","import { useCallback, useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\nimport Main from \"./pages/Main\";\nimport Auth from \"./pages/Auth\";\nimport \"./App.css\";\n\nimport { useAppDispatch, useAppSelector } from \"./hooks/useRedux\";\nimport { refreshData } from \"./redux-store/dataRefresher\";\n\nexport default function App() {  \n  const dispatch = useAppDispatch();\n  const isLoading = useAppSelector(state => state.loading.main);\n  \n  const refreshDataHandler = useCallback(() => {\n    refreshData(dispatch); // THUNK: dispatch(refreshData());\n  }, [dispatch]);\n\n  // --- fetch data when app starts --- //\n  useEffect(() => {\n    refreshDataHandler();\n  }, [refreshDataHandler]);\n\n  if (isLoading) {\n    return <div>\n      <h1 className=\"loading-text\">LOADING...</h1>\n    </div>\n  }\n\n  return (\n    // FLEX CONTAINER\n    <div className=\"flex-container\">\n\n      <Layout>\n        {/* NAV IS IN LAYOUT */}\n\n        {/* MAIN BODY */}\n        <div className=\"flex-main-body\">\n\n          {/* ROUTES \"/posts\" and \"/account\" */}\n          <Routes>\n            <Route path=\"/posts/*\" element={<Main />} />\n            <Route path=\"/account\" element={<Auth onRefreshData={refreshDataHandler} />} />\n            <Route path=\"/*\" element={<Navigate to=\"/posts\" />} />\n          </Routes>\n\n        </div>\n\n      {/* FOOTER IS IN LAYOUT */}\n      </Layout>\n\n    </div>\n  );\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\nimport loadingReducer from \"./loadingSlice\";\nimport notificationReducer from \"./notificationSlice\";\nimport postReducer from \"./postSlice\";\n// IMPORT 4 SLICES\n\nconst store = configureStore({\n    reducer: {\n        auth: authReducer,\n        loading: loadingReducer,\n        notification: notificationReducer,\n        post: postReducer\n    }\n})\nexport default store;\n\n// \"ReturnType<typeof store.getState>\"\nexport type RootState = ReturnType<typeof store.getState>;\n\n// \"typeof store.dispatch\"\nexport type AppDispatch = typeof store.dispatch;\n\n// SOURCE: https://redux.js.org/usage/usage-with-typescript\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux-store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}